// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlaceMyBetAPI.Models;

namespace PlaceMyBetAPI.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20200211212726_CrearBD")]
    partial class CrearBD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PlaceMyBetAPI.Models.Apuesta", b =>
                {
                    b.Property<int>("ApuestaId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cantidad");

                    b.Property<double>("Cuota");

                    b.Property<int>("MercadoId");

                    b.Property<string>("Tipo");

                    b.Property<int>("UsuarioId");

                    b.HasKey("ApuestaId");

                    b.HasIndex("MercadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apuestas");

                    b.HasData(
                        new
                        {
                            ApuestaId = 1,
                            Cantidad = 50.0,
                            Cuota = 1.8,
                            MercadoId = 1,
                            Tipo = "over 1.5",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("PlaceMyBetAPI.Models.Cuenta", b =>
                {
                    b.Property<int>("CuentaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NombreBanco");

                    b.Property<string>("NumeroTarjeta");

                    b.Property<int>("UsuarioId");

                    b.HasKey("CuentaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Cuentas");

                    b.HasData(
                        new
                        {
                            CuentaId = 1,
                            NombreBanco = "BBVA",
                            NumeroTarjeta = "1234",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("PlaceMyBetAPI.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EquipoLocal");

                    b.Property<string>("EquipoVisitante");

                    b.Property<DateTime>("Fecha");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            EventoId = 1,
                            EquipoLocal = "Valencia",
                            EquipoVisitante = "Madrid",
                            Fecha = new DateTime(2020, 2, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            EventoId = 2,
                            EquipoLocal = "Barcelona",
                            EquipoVisitante = "Madrid",
                            Fecha = new DateTime(2020, 2, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("PlaceMyBetAPI.Models.Mercado", b =>
                {
                    b.Property<int>("MercadoId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("CuotaOver");

                    b.Property<double>("CuotaUnder");

                    b.Property<double>("DineroOver");

                    b.Property<double>("DineroUnder");

                    b.Property<int>("EventoId");

                    b.Property<string>("TipoMercado");

                    b.HasKey("MercadoId");

                    b.HasIndex("EventoId");

                    b.ToTable("Mercados");

                    b.HasData(
                        new
                        {
                            MercadoId = 1,
                            CuotaOver = 1.8,
                            CuotaUnder = 1.5700000000000001,
                            DineroOver = 100.0,
                            DineroUnder = 100.0,
                            EventoId = 1
                        },
                        new
                        {
                            MercadoId = 2,
                            CuotaOver = 1.7,
                            CuotaUnder = 1.3500000000000001,
                            DineroOver = 150.0,
                            DineroUnder = 180.0,
                            EventoId = 2
                        });
                });

            modelBuilder.Entity("PlaceMyBetAPI.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<int>("Edad");

                    b.Property<string>("Email");

                    b.Property<string>("Nombre");

                    b.Property<string>("Password");

                    b.Property<double>("Saldo");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellidos = "Apellidos",
                            Edad = 20,
                            Email = "user1@user.com",
                            Nombre = "User1",
                            Password = "password",
                            Saldo = 150.0
                        });
                });

            modelBuilder.Entity("PlaceMyBetAPI.Models.Apuesta", b =>
                {
                    b.HasOne("PlaceMyBetAPI.Models.Mercado", "Mercado")
                        .WithMany("Apuestas")
                        .HasForeignKey("MercadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PlaceMyBetAPI.Models.Usuario", "Usuario")
                        .WithMany("Apuestas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlaceMyBetAPI.Models.Cuenta", b =>
                {
                    b.HasOne("PlaceMyBetAPI.Models.Usuario", "Usuario")
                        .WithOne("Cuenta")
                        .HasForeignKey("PlaceMyBetAPI.Models.Cuenta", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlaceMyBetAPI.Models.Mercado", b =>
                {
                    b.HasOne("PlaceMyBetAPI.Models.Evento", "Evento")
                        .WithMany("Mercados")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
